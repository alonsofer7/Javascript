{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fer\\\\Documents\\\\UNI\\\\Year4\\\\Javascript\\\\MyReactApps\\\\react-state-example-start\\\\src\\\\components\\\\CountDown.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass CountDown extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0\n    };\n  }\n  componentDidMount() {\n    //esto es una funcion prehecha \n    this.timerID = setInterval(() => {\n      this.setState({\n        count: this.state.count - 1\n      });\n    }, 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  render() {\n    //esto tiene que return algo siempre\n    if (this.state.count > 0) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Time remaining: \", this.state.count, \" seconds \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Time is up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }, this);\n    }\n  }\n}\nexport default CountDown;","map":{"version":3,"names":["React","CountDown","Component","constructor","state","count","componentDidMount","timerID","setInterval","setState","componentWillUnmount","clearInterval","render"],"sources":["C:/Users/Fer/Documents/UNI/Year4/Javascript/MyReactApps/react-state-example-start/src/components/CountDown.js"],"sourcesContent":["import React from 'react';\r\n\r\nclass CountDown extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state =  {\r\n            count: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount(){ //esto es una funcion prehecha \r\n        this.timerID = setInterval(() => {\r\n            this.setState({\r\n                count: this.state.count - 1\r\n            });\r\n        }, 1000);   \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    render(){ //esto tiene que return algo siempre\r\n        if(this.state.count > 0){\r\n        return <h1>Time remaining: {this.state.count} seconds </h1>\r\n    }\r\n    else {\r\n        return <h1>Time is up</h1>\r\n    }\r\n    }\r\n}\r\n\r\nexport default CountDown;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,SAAS,SAASD,KAAK,CAACE,SAAS,CAAC;EACpCC,WAAW,GAAG;IACV,KAAK,EAAE;IACP,IAAI,CAACC,KAAK,GAAI;MACVC,KAAK,EAAE;IACX,CAAC;EACL;EAEAC,iBAAiB,GAAE;IAAE;IACjB,IAAI,CAACC,OAAO,GAAGC,WAAW,CAAC,MAAM;MAC7B,IAAI,CAACC,QAAQ,CAAC;QACVJ,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAK,GAAG;MAC9B,CAAC,CAAC;IACN,CAAC,EAAE,IAAI,CAAC;EACZ;EAEAK,oBAAoB,GAAG;IACnBC,aAAa,CAAC,IAAI,CAACJ,OAAO,CAAC;EAC/B;EAEAK,MAAM,GAAE;IAAE;IACN,IAAG,IAAI,CAACR,KAAK,CAACC,KAAK,GAAG,CAAC,EAAC;MACxB,oBAAO;QAAA,+BAAqB,IAAI,CAACD,KAAK,CAACC,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAe;IAC/D,CAAC,MACI;MACD,oBAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB;IAC9B;EACA;AACJ;AAEA,eAAeJ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}